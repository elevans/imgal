name: Publish imgal on PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Run in dry-run mode (skip PyPI upload)'
        required: false
        type: boolean
        default: true

permissions:
  contents: read

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.platform.os }} (${{ matrix.platform.target }})
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          # Linux x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
          # Linux aarch64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: linux-aarch64
          # Windows x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x86_64
          # macOS x86_64 (Intel)
          - os: macos-13
            target: x86_64-apple-darwin
            name: macos-x86_64
          # macOS aarch64 (Apple Silicon)
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-aarch64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Just for running maturin

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --manifest-path imgal_python/Cargo.toml --interpreter 3.9 3.10 3.11 3.12 3.13
          sccache: 'true'
          manylinux: auto

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform.name }}
          path: dist
          retention-days: 7

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path imgal_python/Cargo.toml

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist
          retention-days: 7

  dry-run-check:
    name: List built packages (dry-run)
    runs-on: ubuntu-latest
    needs: [build-wheels, build-sdist]
    if: github.event.inputs.dry-run == 'true' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: dist
          merge-multiple: true

      - name: List all built packages
        run: |
          echo "📦 Built packages:"
          echo "================="
          ls -lh dist/
          echo ""
          echo "📊 Summary:"
          echo "Total wheels: $(ls -1 dist/*.whl 2>/dev/null | wc -l)"
          echo "Source distributions: $(ls -1 dist/*.tar.gz 2>/dev/null | wc -l)"
          echo ""
          echo "🐍 Python versions covered:"
          ls -1 dist/*.whl 2>/dev/null | grep -oP 'cp3\d+' | sort -u || true
          echo ""
          echo "💻 Platforms covered:"
          ls -1 dist/*.whl 2>/dev/null | sed 's/.*-cp[0-9]*-//' | sed 's/\.whl$//' | sort -u || true

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [build-wheels, build-sdist]
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.dry-run == 'false')
    environment:
      name: pypi
      url: https://pypi.org/p/imgal
    permissions:
      id-token: write  # Required for trusted publishing

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: dist
          merge-multiple: true

      - name: List packages to publish
        run: |
          echo "📦 Publishing the following packages:"
          ls -lh dist/

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --skip-existing dist/*
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
